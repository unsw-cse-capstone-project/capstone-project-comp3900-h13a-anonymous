Week 1
Group formed 
Select Investment Simulator as project 
Select Django framework to develop website 
Elect Riley as scrum master 

Due next week: 
User stories 


Week 2
Register group on Jira
Register group on GitHub 
Complete writing user stories and upload to Jira - no issues here, we discussed differing view points and clarified that in our team meeting 

Due next week: 
Discussed project proposal and divided sections to team members - my section is architecture and competitor analysis 


Week 3
Worked on ER diagram  
We consolidated our project sections 

I compiled the Django framework into an app and uploaded to GitHub. Added a page of stocks and a stock detail page - very basic. 

Due next week: 
Login/ logout/ signup functionality 


Week 4 
Submitted proposal 

Added a base.html that was common for all .html files 
Completed login/ logout/ signup functionality with error messages. However, I'm unsure how to link logged in user's current balance as I am using the inbuilt Django user table, which I cannot modify. 


Week 5 
Demo which went great. 

Removed sample data for watchlist and replaced it to be the currently logged in user's data 
Updated watchlist functions to be for the currently logged in user and not a sample user 
I was able to overcome the issue of adding a field to user by creating another table called "Profile" with a one to one mapping with user. It automatically creates when user is created and the key is the user's email. It has a balance of 10000 by default. 

Due next week: 
Watchlist functions 


Week 6
Added a function to buy from watchlist and remove from watchlist. 
Set watch price function added 
Page that shows all alerts and alerts to be displayed 
Alert notifications also appear on watchlist page however a problem is that I do not know how to make them realtime. The alert timings are currently the time that the logged in user checks the watchlist page. 
'Buy page' to buy watch list stocks added 

Due next week: 
Improvements on watchlist functionality and need to add buy/sell on frontend as Jeff improved the backend algorithm 


Week 7 
Added the 'sell' page to sell stocks from portfolio
Added frontend to buy/sell on watch price alerts 
Remove watch price functionality added 


Due next week:
Improvements on frontend for watchprice 

Week 8 
Demo 

When stock is removed from watchlist, all untriggered alerts are also removed from the database 
Added an "alert_backup" branch as the watch price alerts are not realtime yet 
Added a greeting for logged in user and also their balance so that its easy for logged in users 
Updated watchlist frontend to have watch price alerts information 

Due next week:
Improve frontend as the watchlist and portfolio page is quite clunky at the moment 

Week 9 
The issue of not having real-time alerts was solved by Jeff, so I updated the watchlistalert model a bit by adding a "shown" field so that triggered alerts can be shown 
I added a drop down for the buttons on portfolio and watchlist and it looks much cleaner now 
I also added a stock detail page which you can see when you click on the stock name in watchlist 
Ryan helped me during the lab to make the background change colour when you click on stock name in watchlist. This was by "hover" in CSS. 

Work on project report over weekend 

Week 10
Complete project report 
Prepare for project demo 